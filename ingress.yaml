# apiVersion: networking.k8s.io/v1
# kind: Ingress
# metadata:
#   name: app
#   namespace: argocd
#   annotations: #annotations 옵션으로 alb에 세밀한 설정이 가능하다. 이건 예시고 더 많이 있다
#     alb.ingress.kubernetes.io/scheme: internet-facing #internet-facing or internal
#     alb.ingress.kubernetes.io/target-type: ip
#     alb.ingress.kubernetes.io/load-balancer-name: prometheus-alb
# spec:
#   ingressClassName: alb
#   rules:
#     - http:
#         paths:
#         - path: /
#           pathType: Prefix
#           backend:
#             service:
#               name: prometheus-server
#               port:
#                 number: 9090
apiVersion: apps/v1
kind: Deployment
metadata:
  name: deploy
spec:
  replicas: 3
  selector:
    matchLabels:
      app: nginx
  template:
    metadata:
      labels:
        app: nginx
    spec:
      containers:
        - name: nginx-container
          image: nginx:latest
---
apiVersion: v1
kind: Service
metadata:
  name: nginx-service
spec:
  type: NodePort # NodePort or ClusterIP, LoadBalancer
  selector:
    app: nginx
  ports:
    - name: nginx-port
      protocol: TCP
      port: 80
      targetPort: 80 #애플리케이션 파드. 예를 들어, 내가 flask를 8080 포트로 띄웠다면 타겟포트를 8080으로 지정
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: nginx-alb
  annotations: #annotations 옵션으로 alb에 세밀한 설정이 가능하다. 이건 예시고 더 많이 있다
    alb.ingress.kubernetes.io/scheme: internet-facing #internet-facing or internal
    alb.ingress.kubernetes.io/target-type: ip
    alb.ingress.kubernetes.io/load-balancer-name: nginx-alb
spec:
  ingressClassName: alb
  rules:
    - http:
        paths:
        - path: /
          pathType: Prefix
          backend:
            service:
              name: nginx-service
              port:
                number: 80
